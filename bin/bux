#!/usr/bin/env python3

# TODO port this to Go

import sys
import argparse
import colors as c
import os
import pwd
import datetime

parser = argparse.ArgumentParser(description='Mmmmm, SkilBux')
parser.add_argument('user', metavar='user', nargs='?',
                    default=pwd.getpwuid(os.geteuid())[0], help='user')
parser.add_argument('amount', metavar='amount', nargs='?', type=int,
                    help='amount to add (- to subtract) (admin only)')
parser.add_argument('comment', metavar='comment', nargs='?', 
                    help='comment describing why (admin only)')

args = parser.parse_args()
user = args.user
amount = args.amount
comment = args.comment
uid = pwd.getpwnam(user).pw_uid

if not uid > 0:
    print("There appears to be no user by that name on this system.")
    exit()

d = "/var/lib/skilstak/" + user
buxp = d + "/bux"
logp = d + "/buxlog"
bux = 0

# don't need to check ownership because assuming system setup correctly

def show_bux(user,bux):
    print(c.yellow + user + " has " + c.cyan +
        str(bux) + c.reset + c.yellow + " SkilBux." + c.reset)

def log(line):
    with open(logp, "a") as f:
        tstamp = str(datetime.datetime.now())
        print(tstamp + " " + line, file=f)

if not os.path.exists(buxp):
    try:
        os.makedirs(d)
        with open(buxp,"a") as f:
            print("0",file=f)
        log("Log created")
    except PermissionError:
        exit()

try:
    with open(buxp, "r+") as f:
        bux = f.read()
        if not bux:
            bux = 0
        else:
            bux = int(bux)
        if amount: 
            f.seek(0)
            bux += amount
            print(str(bux), file=f)
            if comment:
                log("{0} {1}".format(amount,comment))
            else:
                log(str(amount))
        show_bux(user,bux)
except FileNotFoundError as e:
    # print(str(e),file=sys.stderr)
    exit()
